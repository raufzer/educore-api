basePath: /v1
definitions:
  request.CreateUsersRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
    required:
    - email
    - name
    - password
    type: object
  request.LoginRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  request.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
    type: object
  response.LoginResponse:
    properties:
      token:
        type: string
      token_type:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  response.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Complete API for EduCore Platform
  title: EduCore API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and generate access token
      parameters:
      - description: Login Credentials
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
              type: object
        "400":
          description: Invalid username or password
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User Registration Details
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created user
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid registration details
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Registration
      tags:
      - Authentication
  /users:
    get:
      description: Retrieves a list of all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.UserResponse'
                  type: array
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided details
      parameters:
      - description: User Creation Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new user
      tags:
      - Users
  /users/{name}:
    delete:
      description: Deletes a user by username
      parameters:
      - description: Username
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a user
      tags:
      - Users
    get:
      description: Fetches user details for a specific username
      parameters:
      - description: Username
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a user by username
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Updates user details by username
      parameters:
      - description: Username
        in: path
        name: name
        required: true
        type: string
      - description: User Update Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing user
      tags:
      - Users
swagger: "2.0"
